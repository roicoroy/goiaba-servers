events {
    worker_connections 1024;
}

http {
    upstream medusa_backend {
        server medusa:9000;
    }

    upstream strapi_backend {
        server strapi:1337;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Medusa API
        location /medusa/ {
            limit_req zone=api burst=20 nodelay;
            
            rewrite ^/medusa/(.*) /$1 break;
            proxy_pass http://medusa_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-control-allow-headers "Authorization, Content-Type, x-publishable-api-key" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # Strapi API
        location /strapi/ {
            limit_req zone=api burst=20 nodelay;
            
            rewrite ^/strapi/(.*) /$1 break;
            proxy_pass http://strapi_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # Health checks
        location /health {
            access_log off;
            return 200 "healthy
";
            add_header Content-Type text/plain;
        }

        # Default route
        location / {
            return 200 "Unified System - Medusa & Strapi";
            add_header Content-Type text/plain;
        }
    }
}