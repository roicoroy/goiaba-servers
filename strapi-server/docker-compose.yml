services:
  strapi:
    container_name: strapi
    build:
      context: strapi-server
    image: strapi:latest
    restart: unless-stopped
    env_file: strapi-server/.env.example
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapi-db
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: 5432
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./strapi-server/config:/opt/app/config
      - ./strapi-server/src:/opt/app/src
      - ./strapi-server/package.json:/opt/package.json
      - ./strapi-server/yarn.lock:/opt/yarn.lock
      - ./strapi-server/.env.example:/opt/app/.env
      - ./strapi-server/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - unified-auth-network
    depends_on:
      - strapi-db

  strapi-db:
    container_name: strapi-db
    platform: linux/amd64
    restart: unless-stopped
    env_file: strapi-server/.env.example
    image: postgres:14.5-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/
      - ./strapi-server/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    ports:
      - "5433:5432"
    networks:
      - unified-auth-network

  strapiAdminer:
    container_name: strapiAdminer
    image: adminer
    restart: unless-stopped
    ports:
      - "9090:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=strapi-db
    networks:
      - unified-auth-network
    depends_on:
      - strapi-db
